{"ast":null,"code":"var _jsxFileName = \"/home/dcil142/Downloads/WIKIPEDIA/SAMA--Wikipedia/src/component/RichtextEditor.js\";\nimport React, { useState, useRef } from \"react\";\nimport ReactSummernote from \"react-summernote\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { getArticleById } from './Content';\n\nconst addImage = fileList => {\n  const reader = new FileReader();\n\n  reader.onloadend = () => {\n    ReactSummernote.insertImage(reader.result);\n  };\n\n  reader.readAsDataURL(fileList[0]);\n};\n\nexport default function RichTextEditor(props) {\n  const params = useParams();\n  const data = getArticleById(params.id, props.article);\n  const [content, setContent] = useState(data.content);\n  const titleref = useRef(null);\n\n  function getTextAreaValue(data) {\n    setContent(data);\n  }\n\n  function save() {\n    let contentObj = {};\n\n    if (params.id != null) {\n      //Edit functionality\n      const index = props.article.findIndex(obj => obj.id === Number(params.id));\n      contentObj = props.article[index];\n      contentObj.id = Number(params.id);\n      contentObj.title = titleref.current.value.toUpperCase();\n      contentObj.content = content;\n      props.article[index] = contentObj;\n      props.setArticle([...props.article]);\n    } else {\n      //New functionality\n      contentObj.id = Math.floor(Date.now() / 1000);\n      contentObj.title = titleref.current.value.toUpperCase();\n      contentObj.content = content;\n\n      if (contentObj.title == null) {\n        alert('Please enter the Title');\n      } else {\n        if (props.article.every(obj => obj.title !== contentObj.title)) {\n          props.setArticle([contentObj, ...props.article]);\n        } else {\n          alert('Data available already');\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Title...\",\n    name: \"search\",\n    defaultValue: data.title,\n    ref: titleref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ReactSummernote, {\n    onInit: () => {\n      const editArea = document.querySelector('.note-editable');\n      editArea.innerHTML = Object.values({\n        content\n      });\n    },\n    className: \"editor\",\n    options: {\n      lang: \"ru-RU\",\n      height: 350,\n      dialogsInBody: true,\n      toolbar: [[\"style\", [\"style\"]], [\"font\", [\"bold\", \"underline\", \"clear\"]], [\"fontname\", [\"fontname\"]], [\"para\", [\"ul\", \"ol\", \"paragraph\"]], [\"table\", [\"table\"]], [\"insert\", [\"link\", \"picture\", \"video\"]], [\"view\", [\"fullscreen\", \"codeview\"]]]\n    },\n    onImageUpload: addImage,\n    onChange: getTextAreaValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: params.id != null ? `/content/display/${params.id}` : `/content`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"m-3\",\n    onClick: e => {\n      if (titleref.current.value === \"\") {\n        alert('Please enter title');\n      } else {\n        save();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(Link, {\n    to: `/content`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Cancel\")));\n}","map":{"version":3,"sources":["/home/dcil142/Downloads/WIKIPEDIA/SAMA--Wikipedia/src/component/RichtextEditor.js"],"names":["React","useState","useRef","ReactSummernote","Button","Form","useParams","Link","getArticleById","addImage","fileList","reader","FileReader","onloadend","insertImage","result","readAsDataURL","RichTextEditor","props","params","data","id","article","content","setContent","titleref","getTextAreaValue","save","contentObj","index","findIndex","obj","Number","title","current","value","toUpperCase","setArticle","Math","floor","Date","now","alert","every","editArea","document","querySelector","innerHTML","Object","values","lang","height","dialogsInBody","toolbar","e"],"mappings":"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","sourcesContent":["\nimport React, {useState, useRef}  from \"react\";\nimport ReactSummernote            from \"react-summernote\";\nimport {Button,Form}              from \"react-bootstrap\";\nimport { useParams, Link }        from \"react-router-dom\";\nimport { getArticleById }         from './Content';\n\n\nconst addImage     = (fileList) => {\n  const reader     = new FileReader();\n  reader.onloadend = () => {\n    ReactSummernote.insertImage(reader.result);\n  };\n  reader.readAsDataURL(fileList[0]);\n};\n\nexport default function RichTextEditor(props) {\n  const params                = useParams();\n  const data                  = getArticleById(params.id,props.article);\n  const [content, setContent] = useState(data.content);\n  const titleref              = useRef(null);\n\n  function getTextAreaValue(data) {\n    setContent(data);\n  }\n\n  function save() {\n    let contentObj          = {};\n    if(params.id != null){ //Edit functionality\n      const index           = props.article.findIndex((obj) => obj.id === Number(params.id));\n      contentObj            = props.article[index];\n      contentObj.id         = Number(params.id);\n      contentObj.title      = titleref.current.value.toUpperCase();\n      contentObj.content    = content;\n      props.article[index]  = contentObj;\n      props.setArticle([...props.article]);\n    }\n    else{ //New functionality\n      contentObj.id         = Math.floor(Date.now()/1000);\n      contentObj.title      = titleref.current.value.toUpperCase();\n      contentObj.content    = content;\n\n      if(contentObj.title == null){\n        alert('Please enter the Title');\n      }\n      else{\n        if(props.article.every((obj)=>obj.title !== contentObj.title)){\n          props.setArticle([contentObj, ...props.article]);\n        }\n        else{\n            alert('Data available already');\n        }\n      }\n    }\n  }\n  \n  return(\n    <>\n    <Form.Group>\n      <Form.Control   type          = \"text\" \n                      placeholder   = \"Enter Title...\"  \n                      name          = \"search\"\n                      defaultValue  = {data.title}\n                      ref           = {titleref} />\n      <br />\n    </Form.Group>\n\n    <ReactSummernote\n      onInit={() => {\n        const editArea      = document.querySelector('.note-editable');\n        editArea.innerHTML  = Object.values({content});\n        }\n      }\n      \n      className = \"editor\"\n        options ={{\n          lang          : \"ru-RU\",\n          height        : 350,\n          dialogsInBody : true,\n          toolbar       :[\n            [\"style\"    ,[\"style\"]],\n            [\"font\"     ,[\"bold\", \"underline\", \"clear\"]],\n            [\"fontname\" ,[\"fontname\"]],\n            [\"para\"     ,[\"ul\", \"ol\", \"paragraph\"]],\n            [\"table\"    ,[\"table\"]],\n            [\"insert\"   ,[\"link\", \"picture\", \"video\"]],\n            [\"view\"     ,[\"fullscreen\", \"codeview\"]],\n          ],\n        }\n      }\n      onImageUpload = {addImage}\n      onChange      = {getTextAreaValue}\n    />\n      \n    <Link to = {params.id != null ? `/content/display/${ params.id}`:`/content`}>\n      <Button className=\"m-3\" onClick = {e =>{if(titleref.current.value === \"\"){\n            alert('Please enter title');\n          }\n          else{\n            save(); \n          }\n        }\n      }>Save\n      </Button>\n    </Link>\n    \n    <Link to = {`/content`}>\n      <Button>Cancel\n      </Button>\n    </Link>\n  </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}